<%- include('partials/header'); -%>

    <!-- Login form -->
    <form class="container-sm text-center p-5 login-form">
        <h1>Log in</h1>
        <p>Don't have an account? Click here to <a href="/signup">sign up</a></p>
        <div class="form-floating mb-3">
            <input type="text" name="email" class="form-control" required>
            <label for="email">Email address</label>
            <div class="email error"></div>
        </div>
        <div class="form-floating mb-3">
            <input type="password" name="password" class="form-control" required>
            <label for="password">Password</label>
            <div class="password error"></div>
        </div> 
        <div class="g-recaptcha" data-sitekey="6LcxdPMaAAAAAFVvqUUf4TuI6CNYh8UEqEzh2DXB"></div>

        <button class="btn btn-primary btn-lg">Submit</button>
    </form>
    <script>
        alert('Your account has been verified, go job hunting!')
        const form = document.querySelector('.login-form')
        const emailError = document.querySelector('.email.error')
        const passwordError = document.querySelector('.password.error')

        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            // reset errors
            emailError.textContent = ''
            passwordError.textContent = ''
            
            // get the values
            const email = form.email.value
            const password = form.password.value
            const captcha = form.querySelector('#g-recaptcha-response').value

            try {
                const res = await fetch('/login', {
                    method: 'POST',
                    body: JSON.stringify({ email, password, captcha }),
                    headers: { 
                        'Content-Type': 'application/json', 
                        'Accept': 'application/json, text/plain, */*'
                    }
                })
                const data = await res.json()
                console.log(data)
                if (data.errors) {
                    emailError.textContent = data.errors.email
                    passwordError.textContent = data.errors.password
                }
                if (data.user) {
                    location.assign('/')
                }
            } catch (err) {
                console.log(err)
            }
        })

        var Tawk_API = Tawk_API || {}, Tawk_LoadStart = new Date();
        (function () {
            var s1 = document.createElement("script"), s0 = document.getElementsByTagName("script")[0];
            s1.async = true;
            s1.src = 'https://embed.tawk.to/60ab0ec7a4114e480ad07c92/1f6e33eqn';
            s1.charset = 'UTF-8';
            s1.setAttribute('crossorigin', '*');
            s0.parentNode.insertBefore(s1, s0);
        })();
    </script>

    <%- include('partials/footer'); -%>