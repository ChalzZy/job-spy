<%- include('partials/header'); -%>
<form class="password-form">
  <div class="form-group input-group">
    <div class="input-group-prepend">
      <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
    </div>
    <input class="form-control" placeholder="Enter password" type="password" />
  </div>

  <!-- Submit button -->
  <div class="d-flex form-group pt-3 justify-content-center">
    <button type="submit" class="btn btn-primary btn-block">Edit</button>
  </div>
</form>

<%- include('partials/footer'); -%>

<script>
  const form = document.querySelector('.password-form')
  //const emailError = document.querySelector('.email.error')
  //const passwordError = document.querySelector('.password.error')

  form.addEventListener('submit', async (e) => {
    e.preventDefault()

    // reset errors
    //emailError.textContent = ''
    //passwordError.textContent = ''

    // get the values
    //const email = form.email.value
    const password = form.password.value

    try {
      const res = await fetch('/login', {
        method: 'POST',
        body: JSON.stringify({ password }),
        headers: { 'Content-Type': 'application/json' },
      })
      const data = await res.json()
      console.log(data)
      console.log('got it')
      /**
                    if (data.errors) {
                        emailError.textContent = data.errors.email
                        passwordError.textContent = data.errors.password
                    }
                    if (data.user) {
                        location.assign('/')
                    }
                    **/
    } catch (err) {
      console.log(err)
    }
  })

  // Provides live chat functionality
  var Tawk_API = Tawk_API || {},
    Tawk_LoadStart = new Date()
  ;(function () {
    var s1 = document.createElement('script'),
      s0 = document.getElementsByTagName('script')[0]
    s1.async = true
    s1.src = 'https://embed.tawk.to/60ab0ec7a4114e480ad07c92/1f6e33eqn'
    s1.charset = 'UTF-8'
    s1.setAttribute('crossorigin', '*')
    s0.parentNode.insertBefore(s1, s0)
  })()
</script>
