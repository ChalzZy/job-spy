<%- include('partials/header'); -%>

<div class="cover-container d-flex h-100 p-5 mx-auto flex-column text-center">
  <main role="main" class="inner cover">
    <div class="input-group rounded">
      <form class="d-flex mx-auto" id="searchBar">
        <input
          class="form-control me-2"
          id="userInput"
          autocomplete="off"
          placeholder="Search for a job"
          aria-label="Search"
        />
        <select
          class="form-select form-select-sm me-2"
          style="width: auto"
          aria-label=".form-select-sm"
          id="location-selection"
        >
          <option selected>All Locations</option>
          <option value="1">Auckland</option>
          <option value="2">Wellington</option>
          <option value="3">Christchurch</option>
          <option value="4">Dunedin</option>
        </select>
        <button class="btn btn-primary" type="submit" id="searchButton">
          Search
        </button>
      </form>
    </div>
  </main>
</div>
<div><p id="results" style="font-size: 1.8em"></p></div>

<script>
  document
    .getElementById('searchBar')
    .addEventListener('submit', userAction, false)

  // Prevents page from reloading upon form submission
  let form = document.getElementById('searchBar')
  function handleForm(event) {
    event.preventDefault()
  }
  form.addEventListener('submit', handleForm)

  function userAction() {
    let searchString = document.getElementById('userInput').value
    let locationSelection = document.getElementById('location-selection')

    let locationSelectionText =
      locationSelection.options[locationSelection.selectedIndex].text

    if (locationSelectionText == 'All Locations') {
      locationSelectionText = ''
    }

    let jobText = ''
    let webhook_url =
      'https://ap-southeast-2.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/jobsearchapp-wfuox/service/jobs/incoming_webhook/getJobs'

    let url =
      webhook_url +
      '?arg=' +
      searchString +
      '&location=' +
      locationSelectionText

    fetch(url)
      .then(function (response) {
        if (!response.ok) {
          console.log(response)
          jobText += `<center><h3>Status: ${response.status}</h3></center>`
          if (response.json.length === 0)
            jobText += `<center><p>Please enter a search term.</p></center>`
          document.getElementById('results').innerHTML = jobText
          throw Error(response.statusText)
        }
        return response.json()
      })
      .then(function (jobJSON) {
        if (jobJSON['$undefined'] === true) {
          console.log('NO FETCH RESULT')
        } else {
          console.log('FETCHED RESULT... ')
          if (jobJSON.length !== 0) {
            console.log('Fetched array has ' + jobJSON.length + ' entries')
            jobText = buildJobList(jobJSON)
          } else {
            jobText += `<center><h3>No results.</h3></center>`
            jobText += `<center><p>Please try again.</p></center>`
          }
        }
        document.getElementById('results').innerHTML = jobText
      })
      .catch(function (error) {
        console.log('Error: ', error)
      })
  }

  function buildJobList(jobs) {
    let i = 0
    let jobText = ''
    let tagOne = 'a'
    let tagTwo = 'b'

    let firstTagDirectory = [
      '.NET',
      'Java',
      'React',
      'Frontend',
      'Angular',
      'Backend',
      'C#',
    ]
    let secondTagDirectory = [
      'Fullstack',
      'Full stack',
      'Senior',
      'Junior',
      'Remote',
      'AWS',
    ]

    for (i; i < jobs.length; i++) {
      for (let x = 0; x < firstTagDirectory.length; x++) {
        if (
          jobs[i].jobTitle.toLowerCase() ||
          jobs[i].summary.toLowerCase() === firstTagDirectory[x].toLowerCase()
        ) {
          tagOne = firstTagDirectory[x]
        }
      }

      for (let x = 0; x < secondTagDirectory.length; x++) {
        if (
          jobs[i].jobTitle.toLowerCase() ||
          jobs[i].summary.toLowerCase() === secondTagDirectory[x].toLowerCase()
        ) {
          tagTwo = secondTagDirectory[x]
        }
      }

      jobText += `
        <div style="padding-top: 20px">
            <ol class="list-group list-group mx-auto" style="max-width: 55%">
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto" style="max-width: 70%; padding-bottom: 10px">
                        <div class="fs-6">${jobs[i].location}</div>
                        <div class="fw-lighter">${jobs[i].jobTitle}</div>
                        <div class="fs-5">Company: ${jobs[i].company}</div>
                        <div class="fs-6" style="max-width: 90%; overflow: hidden; max-height: 50px">${jobs[i].summary}</div>
                        `
      if (tagOne != '') {
        jobText += `
                        <span class="badge rounded-pill bg-primary">${tagOne}</span> `
      }
      if (tagTwo != '') {
        jobText += `
                        <span class="badge rounded-pill bg-primary">${tagTwo}</span> `
      }

      jobText += `
                    </div>
                    <div class="mx-2 my-auto">
                        <button type="button" class="btn btn-outline-primary">â™¡</button>
                        <a href="${jobs[i].link}"><button type="button" class="btn btn-primary">Apply</button></a>
                    </div>
                </li>
            </ol>
        </div>`
    }
    return jobText
  }
</script>
<%- include('partials/footer'); -%>
